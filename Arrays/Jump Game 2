# Time Complexity :	O(n)
# Space Complexity : O(1)

class Solution:
    def jump(self, nums: List[int]) -> int:
        if len(nums)==1:
            return 0

        cover=lastJump=jumps=0
        for i in range(len(nums)):
            cover = max(cover,i+nums[i])
            if i==lastJump:
                lastJump = cover
                jumps+=1

                if cover>=len(nums)-1:
                    return jumps
